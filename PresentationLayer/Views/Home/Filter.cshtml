@model FilterViewModel

@{
    ViewData["Title"] = "Matched Items";
}

<section class="series">
    <div class="container mt-4">
        <div class="d-flex justify-content-between align-items-center">
            <h3>Results</h3>
            <div class="dropdown">
                <a class="nav-link dropdown-toggle text-dark" data-bs-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                    @(
                        Model.OrderIndex == "ID" 
                        ? "SortBy" 
                        : Model.OrderIndex
                     )
                </a>
                <div class="dropdown-menu">
                    <form asp-action="Filter" method="post">
                        @foreach (var item in Model.MatchedItems)
                        {
                            <input type="hidden" name="items[]" value="@item.ID" />
                        }
                        <a asp-route-orderIndex="Price" asp-route-page="@Model.CurrentPage" asp-route-key="@Model.SearchPhrase" class="dropdown-item">
                            Price
                        </a>
                        <a asp-route-orderIndex="AddedOn" asp-route-page="@Model.CurrentPage" asp-route-key="@Model.SearchPhrase" class="dropdown-item">
                            Newest Arrivals
                        </a>
                        <a asp-route-orderIndex="Rate" asp-route-page="@Model.CurrentPage" asp-route-key="@Model.SearchPhrase" class="dropdown-item">
                            Top Rated
                        </a>
                    </form>
                </div>
            </div>
        </div>
    </div>
</section>

@if (Model.MatchedItems.Any())
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">
                    Image
                </th>
                <th scope="col">
                    Name
                </th>
                <th scope="col">
                    Price
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.MatchedItems)
            {
                <tr>
                    <td scope="row" style="width:10%">
                        <img src="@item.imageSrc" alt="@item.Name" style="object-fit:contain;height:100px;" />
                    </td>
                    <td scope="row">
                        @item.Name
                    </td>
                    <td scope="row" style="width:10%">
                        @if (item.NewPrice > 0)
                        {
                            @item.NewPrice
                        }
                        else
                        {
                            @item.Price
                        }
                        <strong>EGP</strong>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <h3 class="text-black text-center fs-3 mt-5">No matched items!!</h3>
}


<nav>
    <ul class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <li>
                <a href="@Url.Action("Filter", new {
                    page = 1,
                    orderIndex = Model.OrderIndex,
                    key = Model.SearchPhrase
                })">First</a>
            </li>
            <li>
                <a href="@Url.Action("Filter", new {
                    page = Model.CurrentPage - 1,
                    orderIndex = Model.OrderIndex,
                    key = Model.SearchPhrase
                })">Previous</a>
            </li>
        }
        else
        {
            <li class="disabled"><span>First</span></li>
            <li class="disabled"><span>Previous</span></li>
        }

        @{
            int totalPagesToShow = 7;
            int startPage = Math.Max(1, Model.CurrentPage - totalPagesToShow / 2);
            int endPage = Math.Min(Model.TotalPages, startPage + totalPagesToShow - 1);

            if (endPage - startPage + 1 < totalPagesToShow)
            {
                startPage = Math.Max(1, endPage - totalPagesToShow + 1);
            }
        }

        @if (startPage > 1)
        {
            <li><span>...</span></li>
        }

        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="@(i == Model.CurrentPage ? "active" : "")">
                <a href="@Url.Action("Filter", new {
                    page = i,
                    orderIndex = Model.OrderIndex,
                    key = Model.SearchPhrase
                })">@i</a>
            </li>
        }

        @if (endPage < Model.TotalPages)
        {
            <li><span>...</span></li>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li>
                <a href="@Url.Action("Filter", new {
                    page = Model.CurrentPage + 1,
                    orderIndex = Model.OrderIndex,
                    key = Model.SearchPhrase
                })">Next</a>
            </li>
            <li>
                <a href="@Url.Action("Filter", new {
                    page = Model.TotalPages,
                    orderIndex = Model.OrderIndex,
                    key = Model.SearchPhrase
                })">Last</a>
            </li>
        }
        else
        {
            <li class="disabled"><span>Next</span></li>
            <li class="disabled"><span>Last</span></li>
        }
    </ul>
</nav>